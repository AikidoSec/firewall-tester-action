name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-python:
    name: Python Tests (zen-demo-python)
    runs-on: ubuntu-latest

    steps:
      #https://github.com/AikidoSec/zen-demo-python
      - name: Checkout demo app
        uses: actions/checkout@v3
        with:
          repository: AikidoSec/zen-demo-python
          path: zen-demo-python
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Checkout action
      #   id: checkout
      #   uses: actions/checkout@v4

      # - name: Test Local Action
      #   id: test-action
      #   uses: ./
      #   with:
      #     dockerfile_path: ./zen-demo/zen-demo-python/Dockerfile
  # test-nodejs:
  #   name: Node.js Tests (zen-demo-nodejs)
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout demo app
  #       uses: actions/checkout@v4
  #       with:
  #         repository: Aikido-demo-apps/zen-demo-nodejs
  #         path: zen-demo/zen-demo-nodejs
  #         ref: main

  #     - name: Checkout action
  #       id: checkout
  #       uses: actions/checkout@v4
  #     - name: Test Local Action
  #       id: test-action
  #       uses: ./
  #       with:
  #         dockerfile_path: ./zen-demo/zen-demo-nodejs/Dockerfile

  # test-typescript:
  #   name: TypeScript Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       id: checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       id: setup-node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: .node-version
  #         cache: npm

  #     - name: Install Dependencies
  #       id: npm-ci
  #       run: npm ci

  #     - name: Check Format
  #       id: npm-format-check
  #       run: npm run format:check

  #     - name: Lint
  #       id: npm-lint
  #       run: npm run lint

  #     - name: Test
  #       id: npm-ci-test
  #       run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          dockerfile_path: ./temp_test/Dockerfile
      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.time }}"
